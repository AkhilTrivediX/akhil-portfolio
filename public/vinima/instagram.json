{
    "name": "instagram",
    "type": "registry:ui",
    "registryDependencies": [
      "button"
    ],
    "dependencies": [
      "motion"
    ],
    "files": [
      {
        "type": "registry:ui",
        "content": "/* eslint-disable @next/next/no-img-element */\r\n'use client'\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { AnimatePresence, delay, motion, MotionConfig } from \"motion/react\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nexport type InstaPostsType =  \r\n{\r\n    imageUrl: string,\r\n    url?: string,\r\n    videoUrl?: string,\r\n    caption: string,\r\n    likes?: number | string,\r\n    comments?: number | string,\r\n    dateTime?: string\r\n}[]\r\ntype InstaData = {\r\n    layoutId?:string,\r\n    avatarUrl: string,\r\n    username: string,\r\n    name?: string,\r\n    bio?: string,\r\n    isVerified?: boolean,\r\n    stats?: {name: string, value: string}[],\r\n    followButton?: boolean | string,\r\n    posts?: InstaPostsType,\r\n\r\n    iconOnlyIdle?: boolean,\r\n    avatarOnIdle?:boolean,\r\n    usernameOnIdle?:boolean,\r\n    monotone?: boolean\r\n}\r\nconst CAPTION_WORD_LIMIT = 30\r\n\r\nexport default function ViInstagram({layoutId='Vinima',usernameOnIdle=true, ...props}: InstaData){\r\n    const [componentState, setComponentState] = useState('idle')\r\n    const MotionButton = motion.create(Button)\r\n    const timeoutRef = useRef<any>(null);\r\n\r\n    \r\n\r\n    \r\n\r\n    return(\r\n        <MotionConfig >\r\n            <motion.main className=\"relative flex justify-center\"  onHoverStart={() => setComponentState('profile')} onHoverEnd={() => setComponentState('idle')}>\r\n\r\n            <MotionButton variant='outline' className=\"gap-2 p-2 opacity-0 pointer-events-none\">\r\n\r\n                <motion.div className=\"inline-flex h-full aspect-square overflow-hidden items-center\" style={{borderRadius: '4px'}}>{props.avatarOnIdle?<img src={props.avatarUrl} alt=\"Profile Insta\"/>:<FaInstagram size={22}/>}</motion.div>\r\n\r\n                {!props.iconOnlyIdle && <motion.span className=\"\" initial={{opacity: 1}} exit={{opacity: 0}}>{usernameOnIdle?props.username:'Instagram'}</motion.span>}\r\n\r\n            </MotionButton>\r\n                \r\n                <AnimatePresence initial={false}>\r\n                {\r\n                    componentState=='idle' && <MotionButton layoutId={layoutId+'component'} variant='outline' className=\"gap-2 p-2 absolute\" style={{translate: '-50% -50%', top: '50%', left: '50%'}}>\r\n\r\n                    <motion.div layoutId={layoutId+'pfp'} className=\"inline-flex h-full aspect-square overflow-hidden items-center\" style={{borderRadius: '4px'}}>{props.avatarOnIdle?<img src={props.avatarUrl} alt=\"Profile Insta\"/>:<FaInstagram size={22}/>}</motion.div>\r\n\r\n                    <AnimatePresence propagate>\r\n                    {!props.iconOnlyIdle && <motion.span layoutId={layoutId+'username'} className=\"\" initial={{opacity: 1}} animate={{opacity: 1}} exit={{opacity: 0}}>{usernameOnIdle?props.username:'Instagram'}</motion.span>}\r\n                    </AnimatePresence>\r\n\r\n                    </MotionButton>\r\n                }\r\n                \r\n                {componentState=='profile' && <motion.div key='detailInstaView' layoutId={layoutId+'component'} className=\"flex flex-col absolute w-[470px] bg-background border border-input rounded-md p-2 gap-2 z-[99]\" style={{translate: '-50% -50%', top: '50%', left: '50%'}}>\r\n\r\n                        <div className=\"flex gap-4\">\r\n\r\n                            <motion.div layoutId={layoutId+'pfp'} className=\"w-[75px] aspect-square overflow-hidden\" style={{borderRadius: '50px'}}>\r\n                                <img src={props.avatarUrl} alt=\"Profile Insta\"/>\r\n                            </motion.div>\r\n\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <div className=\"flex gap-4 items-center\">\r\n                                    <div className=\"flex gap-1 items-center\">\r\n                                        <motion.div layoutId={layoutId+'username'} className=\"text-sm w-[max-content]\" style={{opacity: 0.8}}>{props.username}</motion.div>\r\n                                        {props.isVerified && <motion.div initial={{scale: 0.5,rotateZ:180, opacity: 0, y: 10}} animate={{scale: 1,rotateZ: 0, opacity: 1, y: 0}} exit={{scale: 0.5, opacity: 0, y: 10, transition: {delay: 0}}} transition={{delay: 0.2}} style={props.monotone?{}:{color: '#0095f6'}}><MdVerified /></motion.div>}\r\n                                    </div>\r\n                                    {props.followButton && <MotionButton initial={{scale: 0.5, opacity: 0, y: 10}} animate={{scale: 1, opacity: 1, y: 0}} exit={{scale: 0.5, opacity: 0, y: 10, transition: {delay: 0}}} transition={{delay: 0.2}} size='sm' className={\"h-6 px-2 py-1 text-xs \"+(props.monotone?'':'text-white bg-[#0095f6] hover:bg-[#1877f2]')} onClick={()=>{window.open(typeof props.followButton=='string'?props.followButton:'https://www.instagram.com/'+props.username, '_blank')}}>Follow</MotionButton>}\r\n                                </div>\r\n\r\n                                {props.stats && <motion.div className=\"w-full flex justify-between gap-4 text-sm\" exit={{y: 10, opacity: 0}} transition={{duration: 0.1}}>\r\n                                        {\r\n                                            props.stats.map((item, index) => (\r\n                                                <motion.div key={index} initial={{opacity: 0, y: 10}} animate={{opacity: 1, y: 0}} transition={{delay: 0.2+index*0.07, bounce: 0}} className=\"flex gap-1\">\r\n                                                    <StaggeredText className=\"font-semibold\" delay={0.2+index*0.07}>{item.value}</StaggeredText>\r\n                                                    <motion.span initial={{opacity: 0}} animate={{opacity: 1, transition: {duration: 0.7}}}>{item.name}</motion.span>\r\n                                                </motion.div>\r\n                                            ))\r\n                                        }\r\n                                </motion.div>}\r\n\r\n                                {props.name && <motion.div exit={{y: 10, opacity: 0}} transition={{delay: 0}}>\r\n                                    <StaggeredText className=\"text-sm font-semibold\" delay={0.2} stagger={0.01}>{props.name}</StaggeredText>\r\n                                </motion.div>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {props.bio && <div>\r\n                            <motion.div className=\"text-sm\" initial={{opacity: 0, y: 10}} animate={{opacity: 1, y: 0, transition: {delay: 0.2}}} exit={{opacity: 0, y: 10}} transition={{bounce: 0}}>{props.bio}</motion.div>\r\n                        </div>}\r\n\r\n                        {props.posts && <div className=\"flex flex-wrap justify-start items-center w-[max-content] gap-4 max-w-[450px]\">\r\n                            {\r\n                                props.posts.map((post, i)=>(\r\n                                    <motion.div layoutId={layoutId+'postImage '+i} initial={{scale: 0.5, opacity: 0, y: 10}} animate={{scale: 1, opacity: 1, y: 0, transition: {delay: 0.3+i*0.05}}} exit={{scale: 0.5, opacity: 0, y: -10, transition: {delay: 0}}} key={i} className=\"w-[100px] aspect-[4/5] border border-input rounded-sm overflow-hidden cursor-pointer relative\" onClick={()=>setComponentState('post '+i)}>\r\n                                        <motion.img src={post.imageUrl} alt='instagram post' className=\"w-full h-full object-cover object-center\"/>\r\n                                        <div className=\"absolute w-full h-full top-0 left-0 bg-black/20 opacity-0 hover:opacity-100 transition-all duration-300 flex justify-center items-end p-2\">\r\n                                            <div className=\"flex gap-2 items-center justify-center text-xs opacity-90 text-white\">\r\n                                                {post.likes && <div className=\"flex gap-1 items-center\"><FaHeart /><StaggeredText>{post.likes.toString()}</StaggeredText></div>}\r\n                                                {post.comments && <div className=\"flex gap-1 items-center\"><FaComment /><StaggeredText>{post.comments.toString()}</StaggeredText></div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </motion.div>\r\n                                ))\r\n                            }\r\n                        </div>}\r\n\r\n                    </motion.div>}\r\n                    {\r\n                        (props.posts||[]).map((post, i)=>componentState==('post '+i) ? <motion.div key='detailPostView' layoutId={layoutId+'component'} className=\"flex flex-col absolute bg-background border border-input rounded-md\" style={{translate: '-50% -50%', top: '50%', left: '50%'}}>\r\n                            <div className=\"flex p-2 gap-2 border-b border-input h-10 items-center text-sm relative\">\r\n                                <motion.div layoutId={layoutId+'pfp'} className=\"inline-flex h-full aspect-square overflow-hidden\" style={{borderRadius: '50px'}}><img src={props.avatarUrl} alt=\"Profile Insta\"/></motion.div>\r\n    \r\n                                <motion.span layoutId={layoutId+'username'} className=\"\" style={{opacity: 1}}>{props.username}</motion.span>\r\n    \r\n                                <motion.div initial={{opacity:0, y: 10}} animate={{opacity:1, y:0}} exit={{opacity: 0, y: 10}}>\r\n                                    {post.dateTime && <StaggeredText className=\"text-sm opacity-70\" delay={0.2} stagger={0.01}>{getReadableDate(post.dateTime)}</StaggeredText>}\r\n                                </motion.div>\r\n\r\n                                <div className=\"absolute top-1/2 -translate-y-1/2 right-2 cursor-pointer text-lg\" onClick={()=>{setComponentState('profile')}}><BsX/></div>\r\n                            </div>\r\n    \r\n                            <div className=\"p-1\">\r\n                                <motion.div className=\"w-[300px] aspect-[4/5] border border-input rounded-sm overflow-hidden\" layoutId={layoutId+'postImage '+i} initial={{opacity:1, y: 10}} animate={{opacity:1, y:0}} exit={{scale: 0.5,opacity: 0, y: 10, transition: {delay:0, duration: 0.1}}}>\r\n                                    <motion.img src={post.imageUrl} alt='instagram post' className=\"w-full h-full object-cover object-center\"/>\r\n                                </motion.div>\r\n                                <div className=\"flex gap-3 text-sm p-2 pb-0 font-semibold opacity-80\">\r\n                                    {post.likes && <motion.div initial={{opacity:0, y: 10}} animate={{opacity:1, y:0, transition: {delay: 0.2}}} exit={{opacity: 0, y: 10}} className=\"flex gap-1 items-center\"><FaHeart style={props.monotone?{}:{color: '#ff3040'}}/><StaggeredText delay={0.3}>{post.likes.toString()}</StaggeredText></motion.div>}\r\n    \r\n                                    {post.comments && <motion.div initial={{opacity:0, y: 10}} animate={{opacity:1, y:0, transition: {delay: 0.4}}} exit={{opacity: 0, y: 10}} className=\"flex gap-1 items-center\"><FaComment /><StaggeredText delay={0.5}>{post.comments.toString()}</StaggeredText></motion.div>}\r\n    \r\n                                    {post.url && <motion.div initial={{opacity:0, y: 10}} animate={{opacity:1, y:0, transition: {delay: 0.6}}} exit={{opacity: 0, y: 10}} className=\"flex gap-1 items-center\" onClick={()=>{window.open(post.url, '_blank')}}><FaArrowUpRightFromSquare /></motion.div>}\r\n                                </div>\r\n    \r\n                                <div className=\"inline-flex text-xs px-2 gap-0.5 flex-wrap\">{parseCaption(post.caption).map((part, index)=>(<StaggeredWords className=\"inline-flex\" key={index} delay={0.5+index*0.02} style={{opacity: part.type=='hashtag'?0.6:1}}>{part.text}</StaggeredWords>))}</div>\r\n                            </div>\r\n                        </motion.div>:null)\r\n                    }\r\n                </AnimatePresence>\r\n            </motion.main>\r\n        </MotionConfig>\r\n    )\r\n}\r\n\r\nfunction StaggeredText({children, className, style, delay=0, stagger=0.05}: {children: string, className?:string, style?:React.CSSProperties, delay?: number, stagger?: number}){\r\n    return(\r\n        <div className={className+' text-nowrap'} style={style}>\r\n                {children.split('').map((char, index) => char!=' '?<motion.span className='inline-block' key={index} initial={{y: 5, opacity: 0}} animate={{y: 0, opacity: 1}} exit={{y: -5, opacity: 0, transition: {delay: 0}}} transition={{duration: 0.1, delay: delay+index * stagger}}>{char}</motion.span>:<span key={index}>&nbsp;</span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StaggeredWords({children, className, style, delay=0, stagger=0.05}: {children: string, className?:string, style?:React.CSSProperties, delay?: number, stagger?: number}){\r\n    return(\r\n        <div className={className+' text-nowrap'} style={style}>\r\n                {children.split(' ').map((word, index) => <motion.span className='inline-block' key={index} initial={{y: 5, opacity: 0}} animate={{y: 0, opacity: 1}} exit={{y: -5, opacity: 0}} transition={{duration: 0.1, delay: delay+index * stagger}}>{word} </motion.span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StaggeredNumbers({children, className, style}: {children: string, className?:string, style?:React.CSSProperties}){\r\n    return(\r\n        <div className={className+\" tabular-nums overflow-hidden\"} style={style}>\r\n            {children.split('').map((digit, index)=>digit!=','?<motion.span className='inline-block' key={index} initial={{y: index%2==0?30:-30, opacity: 0}} animate={{y: 0, opacity: 1}} transition={{duration: 0.2, delay: 0.3, ease: 'easeOut'}}>{digit}</motion.span>:<span key={index}>,</span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getReadableDate = (dateString:string)=>{\r\n    const date = new Date(dateString);\r\n\r\n    const readableDate = date.toLocaleString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"2-digit\",\r\n        hour12: true,\r\n    });\r\n\r\n    return readableDate\r\n}\r\nfunction parseCaption(caption:string) {\r\n    let i=0, x=0;\r\n    let result:{type: string, text: string}[] = []\r\n    while(x!=CAPTION_WORD_LIMIT && i<caption.length && caption.indexOf(' ', i)!=-1){\r\n        let word = caption.substring(i, caption.indexOf(' ', i));\r\n        i = caption.indexOf(' ', i)+1;\r\n\r\n        if(word.includes('#'))\r\n            result.push({type: 'hashtag', text: word})\r\n        else\r\n            result.push({type: 'text', text: word})\r\n\r\n        x++;\r\n    }\r\n\r\n    if(x>=CAPTION_WORD_LIMIT)\r\n        result.push({type: 'text', text: '...'})\r\n\r\n    return result\r\n}\r\n\r\nconst BsX = () => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        className=\"w-6 h-6\"\r\n    >\r\n        <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\"\r\n        />\r\n    </svg>)\r\n\r\nconst FaHeart = ({style}:{style?:React.CSSProperties}) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        width={'1em'}\r\n        height={'1em'}      \r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 512 512\"\r\n        style={style}\r\n    >\r\n        <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"\r\n        />\r\n    </svg>\r\n)\r\n\r\nconst FaComment = ({style}:{style?:React.CSSProperties}) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        width={'1em'}\r\n        height={'1em'}      \r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 512 512\"\r\n        style={style}\r\n    >\r\n        <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z\"\r\n        />\r\n    </svg>\r\n)\r\n\r\nconst FaInstagram = ({style, size}:{style?:React.CSSProperties, size?:number}) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        width={size || '1em'}\r\n        height={size || '1em'}      \r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 512 512\"\r\n        style={style}\r\n    >\r\n        <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z\"\r\n        />\r\n    </svg>\r\n)\r\n\r\nconst FaArrowUpRightFromSquare = ({style, size}:{style?:React.CSSProperties, size?:number}) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        width={size || '1em'}\r\n        height={size || '1em'}      \r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 512 512\"\r\n        style={style}\r\n    >\r\n        <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32h82.7L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3V192c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32H320zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z\"\r\n        />\r\n    </svg>\r\n)\r\n\r\nconst MdVerified = ({style, size}:{style?:React.CSSProperties, size?:number}) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"currentColor\"\r\n        width={size || '1em'}\r\n        height={size || '1em'}   \r\n        viewBox=\"0 -960 960 960\"\r\n        style={style}\r\n    >\r\n        <path d=\"m344-60-76-128-144-32 14-148-98-112 98-112-14-148 144-32 76-128 136 58 136-58 76 128 144 32-14 148 98 112-98 112 14 148-144 32-76 128-136-58-136 58Zm94-278 226-226-56-58-170 170-86-84-56 56 142 142Z\"/>\r\n    </svg>\r\n)\r\n\r\n    ",
        "target": "components/vinima/instagram.tsx",
        "remark": "Why are you inspecting this lol?"
      }
    ]
  }